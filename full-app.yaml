apiVersion: v1
kind: ServiceAccount
metadata:
  name: db-manager-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: db-manager-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "get", "list"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: db-manager-rb
subjects:
- kind: ServiceAccount
  name: db-manager-sa
roleRef:
  kind: Role
  name: db-manager-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-manager-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-manager
  template:
    metadata:
      labels:
        app: backend-manager
    spec:
      serviceAccountName: db-manager-sa
      containers:
      - name: manager-container
        image: rkrzy/k8s-db-manager:v1 
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: backend-manager-service
spec:
  selector:
    app: backend-manager
  ports:
    - port: 80
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signup-frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: signup-frontend
  template:
    metadata:
      labels:
        app: signup-frontend
    spec:
      containers:
      - name: nginx-container
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/nginx/html
        - name: nginx-conf-volume
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: html-volume
        configMap:
          name: signup-page-html
      - name: nginx-conf-volume
        configMap:
          name: nginx-proxy-conf
---
apiVersion: v1
kind: Service
metadata:
  name: signup-frontend-service
spec:
  type: NodePort
  selector:
    app: signup-frontend
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080